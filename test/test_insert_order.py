# coding: utf-8

"""
    Rest DB

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from swagger_client.models.insert_order import InsertOrder

class TestInsertOrder(unittest.TestCase):
    """InsertOrder unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InsertOrder:
        """Test InsertOrder
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InsertOrder`
        """
        model = InsertOrder()
        if include_optional:
            return InsertOrder(
                buyer = '',
                delivery = '',
                address = '',
                phone = '',
                checking = True,
                comment = '',
                partner = True,
                pod = 56,
                basket = [
                    swagger_client.models.basket_base_db.BasketBaseDb(
                        id = 56, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        item_code = '', 
                        price = 56, 
                        user_bot_id = 56, 
                        size_id = 56, 
                        user_bot = swagger_client.models.user_bot_base.UserBotBase(
                            id = 56, 
                            user_id = 56, 
                            bot_token = '', 
                            last_mess = 56, 
                            items = '', 
                            new_user = True, 
                            subscribe_channel = True, 
                            utm_mark_id = 56, 
                            date_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        size = swagger_client.models.size_base.SizeBase(
                            id = 56, 
                            value = '', ), 
                        item = swagger_client.models.item_base.ItemBase(
                            id = 56, 
                            code = '', 
                            changed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            active = True, 
                            brand = '', 
                            model = '', 
                            title = '', 
                            retail_price = 56, 
                            drop_price = 56, 
                            link = '', 
                            photos = '', 
                            season = '', 
                            color = '', 
                            discount_price = 56, 
                            new = True, 
                            code_hash = '', 
                            category_id = '', 
                            manufacturer_country = '', 
                            material = '', 
                            dimension_id = '', 
                            is_original = True, ), )
                    ]
            )
        else:
            return InsertOrder(
                buyer = '',
                checking = True,
                partner = True,
                basket = [
                    swagger_client.models.basket_base_db.BasketBaseDb(
                        id = 56, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        item_code = '', 
                        price = 56, 
                        user_bot_id = 56, 
                        size_id = 56, 
                        user_bot = swagger_client.models.user_bot_base.UserBotBase(
                            id = 56, 
                            user_id = 56, 
                            bot_token = '', 
                            last_mess = 56, 
                            items = '', 
                            new_user = True, 
                            subscribe_channel = True, 
                            utm_mark_id = 56, 
                            date_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        size = swagger_client.models.size_base.SizeBase(
                            id = 56, 
                            value = '', ), 
                        item = swagger_client.models.item_base.ItemBase(
                            id = 56, 
                            code = '', 
                            changed = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            active = True, 
                            brand = '', 
                            model = '', 
                            title = '', 
                            retail_price = 56, 
                            drop_price = 56, 
                            link = '', 
                            photos = '', 
                            season = '', 
                            color = '', 
                            discount_price = 56, 
                            new = True, 
                            code_hash = '', 
                            category_id = '', 
                            manufacturer_country = '', 
                            material = '', 
                            dimension_id = '', 
                            is_original = True, ), )
                    ],
        )
        """

    def testInsertOrder(self):
        """Test InsertOrder"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
